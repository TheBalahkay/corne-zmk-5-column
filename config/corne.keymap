/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 10>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <38 25>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <34 33>;
        };

        altBackspace {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <39 22>;
        };

        meh {
            bindings = <&sk LS(LC(LEFT_ALT))>;
            key-positions = <38 39>;
        };

        qwerty {
            bindings = <&tog 4>;
            key-positions = <37 40 13 22>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        coleman-dh {
            bindings = <
&trans  &kp Q  &kp W  &kp F     &kp P  &kp B        &kp J             &kp L  &kp U            &kp Y                   &kp BACKSPACE  &trans
&trans  &kp A  &kp R  &kp S     &kp T  &kp G        &kp M             &kp N  &kp E            &kp I                   &kp O          &trans
&trans  &kp Z  &kp X  &kp C     &kp D  &kp V        &kp K             &kp H  &mt MINUS COMMA  &mt EXCLAMATION PERIOD  &kp ENTER      &trans
                      &sk LALT  &mo 1  &kp SPACE    &kp LEFT_CONTROL  &mo 2  &sk LGUI
            >;
        };

        sym {
            bindings = <
&trans  &kp ESCAPE             &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp MINUS    &mt LEFT_BRACE LEFT_BRACKET  &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &mt RIGHT_BRACE RIGHT_BRACKET  &kp BACKSPACE  &trans
&trans  &kp TAB                &kp DOLLAR       &kp PERCENT   &kp CARET             &kp PLUS     &mt TILDE GRAVE              &mt DOUBLE_QUOTES SQT  &mt QUESTION SLASH     &mt PIPE BACKSLASH             &none          &trans
&trans  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp EQUAL    &trans                       &kp SEMICOLON          &trans                 &none                          &kp ENTER      &trans
                                                &trans        &trans                &trans       &trans                       &kp LEFT_SHIFT         &trans
            >;
        };

        num {
            bindings = <
&none   &kp ESCAPE  &kp N7  &kp N8  &kp N9          &kp PLUS     &kp LG(LBKT)  &kp LC(LS(TAB))  &kp RC(TAB)   &kp LG(RBKT)  &trans  &none
&none   &kp TAB     &kp N4  &kp N5  &kp NUMBER_6    &kp MINUS    &kp LEFT      &kp DOWN         &kp UP_ARROW  &kp RIGHT     &to 3   &none
&trans  &kp N0      &kp N1  &kp N2  &kp N3          &kp EQUAL    &kp HOME      &kp PG_DN        &kp PG_UP     &kp END       &trans  &none
                            &trans  &kp LEFT_SHIFT  &trans       &trans        &trans           &trans
            >;
        };

        layer_5 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &trans  &trans    &kp C_VOL_DN  &kp C_PREV            &kp C_PLAY            &kp C_NEXT  &kp C_VOL_UP  &trans
&trans          &trans      &trans      &trans      &trans  &trans    &trans        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans      &none         &trans
&trans          &trans      &trans      &trans      &trans  &trans    &trans        &trans                &trans                &trans      &trans        &trans
                                        &trans      &trans  &to 0     &to 0         &trans                &trans
            >;
        };

        base {
            bindings = <
&none  &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y             &kp U  &kp I             &kp O                   &kp P          &none
&none  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H             &kp J  &kp K             &kp L                   &kp BACKSPACE  &none
&none  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N             &kp M  &mt MINUS COMMA   &mt EXCLAMATION PERIOD  &kp ENTER      &none
                     &sk LEFT_ALT  &mo 1  &kp SPACE    &kp LEFT_CONTROL  &mo 2  &kp LEFT_COMMAND
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp K_PASTE     &kp UP_ARROW  &kp K_COPY  &kp ESC        &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &kp C_MUTE      &kp LEFT              &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT   &kp PG_UP      &trans
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp K_UNDO      &kp K_REDO    &kp K_CUT   &kp PAGE_DOWN  &trans
                        &trans  &to 5    &kp LEFT_GUI    &kp RIGHT_ALT         &to 1           &trans
            >;
        };
    };
};
