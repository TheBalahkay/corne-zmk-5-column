/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 10>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <25 38>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp Q           &kp W  &kp E                 &kp R      &kp T    &kp Y  &kp U             &kp I         &kp O       &kp P          &none
&none  &kp A           &kp S  &kp D                 &kp F      &kp G    &kp H  &kp J             &kp K         &kp L       &kp SEMICOLON  &none
&none  &kp LEFT_SHIFT  &kp Z  &kp X                 &kp C      &kp V    &kp B  &kp N             &kp M         &kp PERIOD  &kp SLASH      &none
                              &kp LS(LC(LEFT_ALT))  &kp SPACE  &to 1    &to 2  &kp LEFT_CONTROL  &kp LEFT_GUI
            >;
        };

        sym {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT       &kp CARET        &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK   &trans
&trans  &kp GRAVE        &kp EQUAL    &kp MINUS  &kp SLASH   &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SQT        &trans
&trans  &kp LEFT_SHIFT   &trans       &trans     &trans      &trans            &trans           &trans         &kp COMMA             &kp PERIOD             &kp RIGHT_ALT  &trans
                                      &trans     &trans      &trans            &trans           &trans         &trans
            >;
        };

        num {
            bindings = <
&none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3          &kp NUMBER_4          &kp N5               &kp NUMBER_6   &kp N7        &kp N8        &kp N9        &kp ESCAPE     &trans
&none   &kp N0        &kp K_PREV    &kp C_PLAY_PAUSE      &kp C_NEXT            &kp C_VOLUME_UP      &kp LEFT       &kp DOWN      &kp UP_ARROW  &kp RIGHT     &kp BACKSPACE  &trans
&trans  &trans        &kp ASTERISK  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN    &sk RIGHT_ALT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER      &trans
                                    &trans                &trans                &trans               &trans         &trans        &trans
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp K_PASTE     &kp UP_ARROW  &kp K_COPY  &kp ESC        &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &kp C_MUTE      &kp LEFT              &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT   &kp PG_UP      &trans
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp K_UNDO      &kp K_REDO    &kp K_CUT   &kp PAGE_DOWN  &trans
                        &trans  &to 0    &kp LEFT_GUI    &kp RIGHT_ALT         &to 1           &trans
            >;
        };
    };
};
